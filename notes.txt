

GIT OFFICIAL DOC

https://git-scm.com/doc

GIT BASICS

Working directory -> root folder. Where .git is. Local repository
Staging area -> files add/prepared to be commited
Origin -> remote repository
HEAD -> Current branch pointer. HEAD points to actual branch and branch points to a commit (usually last commit) 

GIT COMMANDS

git init -> inititate git repository on that folder

git status -> show status of the actual local git repository

git log -> repository log info
git log --oneline -> repository log info abbreviated to one line per commit

GIT COMMIT

    git add . -> add to staging all files with changes
    git add "file" -> add file to staging

    git commit -> open default text editor and wait until save and exit to commit
    git commit -m "commit description starting with imperative verb prefered" -> most common use of commit
    git commit --amend -> recommit previous commit. It opens default text editor
    git commit -a -m "commit message" -> add all modified files and commit in one step

GIT IGNORE 

official doc -> https://www.git-scm.com/docs/gitignore

tool for default gitignore files -> https://www.toptal.com/developers/gitignore/

create .gitignore on root folder git repository to avoid git to track specificied files or folders

BRANCHES

    git branch -> list branches from the repository
    git branch "new branch name" -> create a branch from the current HEAD
    git switch "branch name to switch" -> switch to that branch
    git switch -c "new branch name" -> create a new branch and switch
    git checkout "branch name" -> same function as switch. It is the older way. Still common though
    git branch -d "branch name" -> Delete branch. You cant do it if your are in this branch
    git branch -m "branch name to rename" "branch new name"-> rename name of a branch

    changes for stage practice
